1. УМОВА ЗАДАЧІ з усіма деталями:
Midexam: Plants
Екран складається з матриці з великих квадратних клітин. Клітинка може бути:
білою (повітря)
чорної (зернятко)
синьою (крапля води)
зеленої (проросле зернятко)
Всі елементи крім повітря кожну секунду переміщуються донизу на 1 клітину (не треба робити попіксельну анімацію, просто через секунду переміщайте всі елементи на 1 клітинку донизу).
При досягненні “дна” елемент не повинен рухатися нижче (але якщо це краплина води - вона повинна просто зникнути).

спочатку в випадкових місцях екрану створюється Х зерняток.
можна клікнути на екран і в місці кліка буде створюватися крапля води.
при падінні краплі води на зернятко виходить вертикальна структура з 2х зелених клітинок (якраз на місці зернятка і води)
при падінні краплі води на зелену клітинку на місці краплі теж з’являється зелена клітка (типу від води рослина росте на 1 клітинку вгору)
якщо вода досягає “дна”, не торкнувшись знизу чорної або зеленої клітини, то вона знищується.
Для вирішення цієї задачі потоки (Threads) не потрібні ?? та якщо хочете - користуйтесь.

2. відповіді на питання:

* що вийшло, що ні, чому
В принципі, все вийшло, але є зайва краплина води, котрої я поки не позбувся, та може бути таке, що насінини можуть створитися
з однаковими координатами У, і я ніяк це не контролюю, покищо краплина з водою зникає занадто рано
часу на прибирання цих багів не вистачить.

* як підійшли до організації своєї роботи
Спочатку уявив структуру майбутнього коду, продивився на завдання, котрі ми виконували, підчерпнувши звідти ідей, почав створювати константи.
 потім почав писати сам код, за раніше придуманим планом. По ходу виконання роботи заповнюю даний текст, щоб на нього вистачило часу.

* які стратегічні рішення ви прийняли
вирішив як точку, звідки відштовхуватися, обрати клас ToneMatrixDisplay з домашнього завдання, там є матриця з квадратів.

* слабкі місця коду, сильні місця коду
Слабкі місця:
Весь код знаходиться в одному класі
покищо малює зайву краплинку, знаю чому, виправлю якщо залишиться час (якщо ви це читаеєте, что часу не вистачило)
також насінини можуть генеруватися на одній осі у а в умові не сказано, як це обробляти, 
будемо вважати, що вони потрапили в одну лунку, та проросла одна з них)
метод moveAllDown досить громіздкий, але читається

Сильні місця:
Здається, код працює)

* загальна структура коду
код працює на WindowProgram складається з методів: run() - основний метод, drawAir(), котрий забиває матрицю білими квадратами
addSeeds(), котрий додає чорні квадрати-насінини за координатами generateRandomRow та generateRandomCol, 
addWater- додає сині квадрати-краплини за координатами, який надає mousePressed,
котрий бере координати від курсору мишки при натиснутій копці, якщо іони відповідають нашому полю, що первіряється у inField.
потім раз в секунду рухаємо все методом moveAllDown. 
